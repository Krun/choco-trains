tim <- triggers[i,]$time
valid <- subset(testset, time > tim+winmin & time < tim+winmax & installation == ins & event == consequent[[1]])
}
warnings()
triggers[1,]$time
triggers[1,]$time[[1]]
as.numeric(triggers[1,]$time)
triggers[1,]$time[[1]] + 1
as.numeric(triggers[1,]$time) + 1
rule = "<{saml.status.channel_A_CS_unknown,saml.status.channel_B_CS_unknown},{saml.status.channel_B_CS_unknown}>"
rule = processrule(rule)
winmax = 2
winmin = 1
testset = load_baskets(filename="baskets/antequera_1_test.txt")
antecedent = rule[[1]]
consequent = rule[[2]]
triggers <- testset[testset$event == antecedent[[1]], ]
for(i in 2:length(antecedent)){
triggersn <- testset[testset$event == antecedent[[i]], ]
triggers <- merge(triggers, triggersn, by=c("time","installation"))
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- as.numeric(triggers[i,]$installation)
tim <- as.numeric(triggers[i,]$time)
valid <- subset(testset, time > tim+winmin & time < tim+winmax & installation == ins & event == consequent[[1]])
}
warnings()
testset$time <- as.numeric(testset$time)
testset$installation <- as.numeric(testset$installation)
rule = "<{saml.status.channel_A_CS_unknown,saml.status.channel_B_CS_unknown},{saml.status.channel_B_CS_unknown}>"
rule = processrule(rule)
winmax = 2
winmin = 1
testset = load_baskets(filename="baskets/antequera_1_test.txt")
testset$time <- as.numeric(testset$time)
testset$installation <- as.numeric(testset$installation)
antecedent = rule[[1]]
consequent = rule[[2]]
triggers <- testset[testset$event == antecedent[[1]], ]
for(i in 2:length(antecedent)){
triggersn <- testset[testset$event == antecedent[[i]], ]
triggers <- merge(triggers, triggersn, by=c("time","installation"))
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time > tim+winmin & time < tim+winmax & installation == ins & event == consequent[[1]])
}
success += 1
success
success++
;
success = success +1
rule = "<{saml.status.channel_A_CS_unknown,saml.status.channel_B_CS_unknown},{saml.status.channel_B_CS_unknown}>"
rule = processrule(rule)
winmax = 2
winmin = 1
testset = load_baskets(filename="baskets/antequera_1_test.txt")
testset$time <- as.numeric(testset$time)
testset$installation <- as.numeric(testset$installation)
antecedent = rule[[1]]
consequent = rule[[2]]
triggers <- testset[testset$event == antecedent[[1]], ]
for(i in 2:length(antecedent)){
triggersn <- testset[testset$event == antecedent[[i]], ]
triggers <- merge(triggers, triggersn, by=c("time","installation"))
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time > tim+winmin & time < tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
i=1
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time > tim+winmin & time < tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
i=2
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time > tim+winmin & time < tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
i=3
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time > tim+winmin & time < tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
View(triggers)
triggers[2,]
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time => tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time => tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time => tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
for(w in winmin:winmax){
disp <- testset
disp$time <- disp$time+w
disp <- disp[disp$consequent == consequent[[1]]]
valid <- merge(testset,disp, by=c("time","installation"))
success = success + nrow(valid)
}
View(disp)
View(testset)
View(disp)
disp <- testset
View(disp)
disp$time <- testset$time-w
w
View(disp)
View(testset)
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]]]
valid <- merge(testset,disp, by=c("time","installation"))
success = success + nrow(valid)
}
# success = 123
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(testset,disp, by=c("time","installation"))
success = success + nrow(valid)
}
rule = processrule(rule)
winmax = 1
winmin = 1
rule = "<{saml.status.channel_A_CS_unknown,saml.status.channel_B_CS_unknown},{saml.status.channel_B_CS_unknown}>"
rule = processrule(rule)
winmax = 1
winmin = 1
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(testset,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(testset,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(testset,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
#success = 123
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
winmax = 8
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
winmax = 80
success = 0;
for(w in winmin:winmax){
disp <- testset
disp$time <- testset$time-w
disp <- disp[disp$event == consequent[[1]],]
valid <- merge(triggers,disp, by=c("time","installation"))
success = success + nrow(valid)
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + nrow(valid)
}
(nrow(valid) > 1)
1 + (nrow(valid) > 1)
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + (nrow(valid) >= 1)
}
precision <- function(antecedent,consequent,window,testset) {
for(i in 1:length(antecedent)){
testset$time <- as.numeric(testset$time)
testset$installation <- as.numeric(testset$installation)
triggers <- testset[testset$event == antecedent[[1]], ]
for(i in 2:length(antecedent)){
triggersn <- testset[testset$event == antecedent[[i]], ]
triggers <- merge(triggers, triggersn, by=c("time","installation"))
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + (nrow(valid) >= 1)
}
}
return success/nrow(triggers)
}
s
rule = "<{saml.status.channel_A_CS_unknown,saml.status.channel_B_CS_unknown},{saml.status.channel_B_CS_unknown}>"
precision <- function(antecedent,consequent,window,testset) {
for(i in 1:length(antecedent)){
testset$time <- as.numeric(testset$time)
testset$installation <- as.numeric(testset$installation)
triggers <- testset[testset$event == antecedent[[1]], ]
for(i in 2:length(antecedent)){
triggersn <- testset[testset$event == antecedent[[i]], ]
triggers <- merge(triggers, triggersn, by=c("time","installation"))
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + (nrow(valid) >= 1)
}
}
return(success/nrow(triggers))
}
precision <- function(antecedent,consequent,testset,winmax,winmin=1) {
for(i in 1:length(antecedent)){
testset$time <- as.numeric(testset$time)
testset$installation <- as.numeric(testset$installation)
triggers <- testset[testset$event == antecedent[[1]], ]
for(i in 2:length(antecedent)){
triggersn <- testset[testset$event == antecedent[[i]], ]
triggers <- merge(triggers, triggersn, by=c("time","installation"))
}
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + (nrow(valid) >= 1)
}
}
return(success/nrow(triggers))
}
precision(antecedent,consequent,testset,1)
precision <- function(antecedent,consequent,testset,winmax,winmin=1) {
for(i in 1:length(antecedent)){
testset$time <- as.numeric(testset$time)
testset$installation <- as.numeric(testset$installation)
triggers <-get_triggers(antecedent,testset)
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + (nrow(valid) >= 1)
}
}
return(success/nrow(triggers))
}
recall <- function(antecedent, consequent, testset, winmax, winmin=1) {
triggers <-get_triggers(antecedent,testset)
numtriggers <- nrow(triggers)
precision <- precision(antecedent,consequent,testset,winmax,winmin)
valid_predictions <- precision * numtriggers
numconsequent <- nrow(testset[testset$event == consequent[[1]], ])
}
get_triggers <- function(antecedent, testset) {
triggers <- testset[testset$event == antecedent[[1]], ]
for(i in 2:length(antecedent)){
triggersn <- testset[testset$event == antecedent[[i]], ]
triggers <- merge(triggers, triggersn, by=c("time","installation"))
}
return(triggers)
}
recall(antecedent,testset)
recall(antecedent,consequent,testset,1)
recall <- function(antecedent, consequent, testset, winmax, winmin=1) {
triggers <-get_triggers(antecedent,testset)
numtriggers <- nrow(triggers)
precision <- precision(antecedent,consequent,testset,winmax,winmin)
valid_predictions <- precision * numtriggers
numconsequent <- nrow(testset[testset$event == consequent[[1]], ])
recall <- valid_predictions/numconsequent
}
recall(antecedent,consequent,testset,1)
recall <- function(antecedent, consequent, testset, winmax, winmin=1) {
triggers <-get_triggers(antecedent,testset)
numtriggers <- nrow(triggers)
precision <- precision(antecedent,consequent,testset,winmax,winmin)
valid_predictions <- precision * numtriggers
numconsequent <- nrow(testset[testset$event == consequent[[1]], ])
recall <- valid_predictions/numconsequent
return(recall)
}
recall(antecedent,consequent,testset,1)
precision(antecedent,consequent,testset,1)
triggers <-get_triggers(antecedent,testset)
numtriggers <- nrow(triggers)
precision <- precision(antecedent,consequent,testset,winmax,winmin)
valid_predictions <- precision * numtriggers
numconsequent <- nrow(testset[testset$event == consequent[[1]], ])
recall <- valid_predictions/numconsequent
return(recall)
rule = "<{saml.status.channel_A_CS_unknown,saml.status.channel_B_CS_unknown},{saml.status.channel_B_down}>"
rule = processrule(rule)
antecedent = rule[[1]]
consequent = rule[[2]]
recall(antecedent,consequent,testset,1)
recall <- function(antecedent, consequent, testset, winmax, winmin=1) {
triggers <-get_triggers(antecedent,testset)
numtriggers <- nrow(triggers)
precision <- precision(antecedent,consequent,testset,winmax,winmin)
valid_predictions <- precision * numtriggers
numconsequent <- nrow(testset[testset$event == consequent[[1]], ])
recall <- valid_predictions/numconsequent
return(recall)
}
precision <- function(antecedent,consequent,testset,winmax,winmin=1) {
for(i in 1:length(antecedent)){
testset$time <- as.numeric(testset$time)
testset$installation <- as.numeric(testset$installation)
triggers <-get_triggers(antecedent,testset)
success = 0;
for(i in 1:nrow(triggers)){
ins <- triggers[i,]$installation
tim <- triggers[i,]$time
valid <- subset(testset, time >= tim+winmin & time <= tim+winmax & installation == ins & event == consequent[[1]])
success = success + (nrow(valid) >= 1)
}
}
return(success/nrow(triggers))
}
recall(antecedent,consequent,testset)
recall(antecedent,consequent,testset,1)
precision(antecedent,consequent,testset,1)
rm(winmin, winmax)
rm(w, valid_predictions, transrule, tim, success, sptest, splitsred, splits, splitrule, numtriggers, numconsequent, n, listest, line, k, ins, i)
rm(filename, df,con, baskets)
rm(disp,prep,valid,triggers,triggersn,testframe,target)
rm(antequera_learn_1)
rm(DF)
rm(sameseq)
